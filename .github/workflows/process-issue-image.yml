name: Process Image from Issue

on:
  issues:
    types: [opened]

jobs:
  process-image:
    if: contains(github.event.issue.labels.*.name, 'image-upload')
    runs-on: ubuntu-latest

    env:
      SIZE_LIMIT_KB: 150  # Easily changeable size limit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download issue attachments
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const issueBody = context.payload.issue.body;
            const regex = /(https:\/\/user-images\.githubusercontent\.com\/[^\s]+)/g;
            const matches = issueBody.match(regex);
            if (matches) {
              const { execSync } = require('child_process');
              matches.forEach((url, i) => {
                const filename = `uploaded_${i}`;
                execSync(`curl -L "${url}" -o "images/${filename}"`);
              });
            } else {
              console.log("No image URLs found in issue.");

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow

      - name: Process images
        run: |
          python -c "
import os
from PIL import Image

IMAGE_DIR = 'images'
SIZE_LIMIT = int(os.environ.get('SIZE_LIMIT_KB', 150)) * 1024

for filename in os.listdir(IMAGE_DIR):
    filepath = os.path.join(IMAGE_DIR, filename)
    if not os.path.isfile(filepath):
        continue

    try:
        with Image.open(filepath) as img:
            original_size = os.path.getsize(filepath)
            if original_size > SIZE_LIMIT:
                img = img.convert('RGB')
                output_path = os.path.join(IMAGE_DIR, os.path.splitext(filename)[0] + '.jpg')
                quality = 85
                while True:
                    img.save(output_path, 'JPEG', quality=quality)
                    if os.path.getsize(output_path) <= SIZE_LIMIT or quality <= 10:
                        break
                    quality -= 5
                os.remove(filepath)
    except Exception as e:
        print(f'Error processing {filename}: {e}')
"

      - name: Commit processed images
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add images/
          git commit -m "Processed image from issue #${{ github.event.issue.number }}"
          git push
